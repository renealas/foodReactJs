{"ast":null,"code":"var _jsxFileName = \"/Users/usuario/Rene/Cursos/cursoreact/ReactJS/food/src/components/Meals/AvailableMeals.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport MoonLoader from \"react-spinners/MoonLoader\";\nimport MealItem from './MealItem/MealItem';\nimport Card from '../UI/Card';\nimport classes from './AvailableMeals.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AvailableMeals = () => {\n  _s();\n\n  const [meals, setMeals] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [httpError, setHttpError] = useState(); //Override from the Spinner\n\n  const override = `\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n`;\n  useEffect(() => {\n    const fetchMeals = async () => {\n      const response = await fetch('https://react-http-c303a-default-rtdb.firebaseio.com/meals');\n\n      if (!response.ok) {\n        throw new Error('Something went wrong!');\n      }\n\n      const responseData = await response.json();\n      const loadedMeals = [];\n\n      for (const key in responseData) {\n        loadedMeals.push({\n          id: key,\n          name: responseData[key].name,\n          description: responseData[key].description,\n          price: responseData[key].price\n        });\n      }\n\n      setMeals(loadedMeals);\n      setIsLoading(false);\n    };\n\n    fetchMeals().catch(err => {\n      setIsLoading(false);\n      setHttpError(err.message);\n    });\n  }, []);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(MoonLoader, {\n        color: '#FFFFFF',\n        loading: isLoading,\n        css: override,\n        size: 150\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (httpError) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.MealsError,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: httpError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 12\n    }, this);\n  }\n\n  const mealsList = meals.map(meal => /*#__PURE__*/_jsxDEV(MealItem, {\n    id: meal.id,\n    name: meal.name,\n    description: meal.description,\n    price: meal.price\n  }, meal.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.meals,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: mealsList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AvailableMeals, \"6pndJp/WWpMtmhSnoCH9k0tFnXc=\");\n\n_c = AvailableMeals;\nexport default AvailableMeals;\n\nvar _c;\n\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"sources":["/Users/usuario/Rene/Cursos/cursoreact/ReactJS/food/src/components/Meals/AvailableMeals.js"],"names":["React","useEffect","useState","MoonLoader","MealItem","Card","classes","AvailableMeals","meals","setMeals","isLoading","setIsLoading","httpError","setHttpError","override","fetchMeals","response","fetch","ok","Error","responseData","json","loadedMeals","key","push","id","name","description","price","catch","err","message","MealsError","mealsList","map","meal"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport MoonLoader from \"react-spinners/MoonLoader\";\n\nimport MealItem from './MealItem/MealItem';\nimport Card from '../UI/Card';\nimport classes from './AvailableMeals.module.css';\n\nconst AvailableMeals = () => {\n  const [meals, setMeals] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [httpError, setHttpError] = useState();\n\n  //Override from the Spinner\n  const override = `\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n`;\n\n  useEffect(() => {\n    const fetchMeals = async () => {\n      const response = await fetch('https://react-http-c303a-default-rtdb.firebaseio.com/meals');\n      \n      if(!response.ok){\n        throw new Error('Something went wrong!');\n      }\n      \n      const responseData = await response.json();\n\n      const loadedMeals = [];\n\n      for(const key in responseData){\n        loadedMeals.push({\n          id: key,\n          name: responseData[key].name,\n          description: responseData[key].description,\n          price: responseData[key].price,\n        });\n      }\n\n      setMeals(loadedMeals);\n      setIsLoading(false);\n    };\n\n    \n      fetchMeals().catch(err => {\n        setIsLoading(false);\n        setHttpError(err.message);\n      });\n    \n  }, []);\n\n  if(isLoading) {\n    return <section>\n      <br/>\n      <br/>\n      <br/>\n      <MoonLoader color={'#FFFFFF'} loading={isLoading} css={override} size={150} />\n    </section>\n  }\n\n  if(httpError) {\n    return <section className={classes.MealsError}>\n      <p>{httpError}</p>\n    </section>\n  }\n\n  const mealsList = meals.map((meal) => (\n    <MealItem\n      id={meal.id}\n      key={meal.id}\n      name={meal.name}\n      description={meal.description}\n      price={meal.price}\n    />\n  ));\n\n  return (\n    <section className={classes.meals}>\n      <Card>\n        <ul>\n          {mealsList}\n        </ul>\n      </Card>\n    </section>\n  );\n};\n\nexport default AvailableMeals;"]},"metadata":{},"sourceType":"module"}